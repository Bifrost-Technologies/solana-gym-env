Explain: ...
Plan:
1) ...
2) ...
3) ...
...
Code:
```typescript
async function buildTransaction() {{
    // Build the transaction for the task
    const connection = new web3.Connection("http://127.0.0.1:8899");
    const wallet = new web3.PublicKey(AGENT_WALLET_ADDRESS);
    
    // Example 1: Simple transfer (no additional signers needed)
    const recipient = web3.Keypair.generate().publicKey;
    const instruction = web3.SystemProgram.transfer({{
        fromPubkey: wallet,
        toPubkey: recipient,
        lamports: 0.1 * web3.LAMPORTS_PER_SOL
    }});

    // Build transaction
    const transaction = new web3.Transaction();
    transaction.add(instruction);
    
    // Example 2: If creating a new account (requires partial signing)
    // const newAccount = web3.Keypair.generate();
    // const createAccountIx = web3.SystemProgram.createAccount({{
    //     fromPubkey: wallet,
    //     newAccountPubkey: newAccount.publicKey,
    //     lamports: rentExemptBalance,
    //     space: accountSpace,
    //     programId: ownerProgram
    // }});
    // transaction.add(createAccountIx);
    // transaction.partialSign(newAccount); // MUST sign with new account keypair
    
    // Get recent blockhash from the connection
    const {{blockhash}} = await connection.getLatestBlockhash();
    transaction.recentBlockhash = blockhash;
    transaction.feePayer = wallet;

    // Return the base64-encoded transaction
    return Buffer.from(transaction.serialize({{requireAllSignatures: false}})).toString('base64');
}}
```